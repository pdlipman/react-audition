// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`HeaderItem HeaderItem should render properly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <HeaderItem
    className=""
    id="name"
    itemKey="name"
    setSort={[Function]}
    style={Object {}}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <WithStyles(Button)
        style={
                Object {
                        "color": "#2196f3",
                      }
        }
>
        <span>
                <pure(ArrowDropUp)
                        className="UpArrow"
                />
                <pure(ArrowDropDown)
                        className="DownArrow DownArrowOverlay"
                />
        </span>
</WithStyles(Button)>,
      "className": "",
      "item": true,
      "onClick": [Function],
      "sm": 6,
      "style": Object {},
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          undefined,
          <span>
            <pure(ArrowDropUp)
                        className="UpArrow"
            />
            <pure(ArrowDropDown)
                        className="DownArrow DownArrowOverlay"
            />
</span>,
        ],
        "style": Object {
          "color": "#2196f3",
        },
      },
      "ref": null,
      "rendered": Array [
        undefined,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <pure(ArrowDropUp)
                className="UpArrow"
/>,
              <pure(ArrowDropDown)
                className="DownArrow DownArrowOverlay"
/>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "UpArrow",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "DownArrow DownArrowOverlay",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "span",
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <WithStyles(Button)
          style={
                    Object {
                              "color": "#2196f3",
                            }
          }
>
          <span>
                    <pure(ArrowDropUp)
                              className="UpArrow"
                    />
                    <pure(ArrowDropDown)
                              className="DownArrow DownArrowOverlay"
                    />
          </span>
</WithStyles(Button)>,
        "className": "",
        "item": true,
        "onClick": [Function],
        "sm": 6,
        "style": Object {},
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            undefined,
            <span>
              <pure(ArrowDropUp)
                            className="UpArrow"
              />
              <pure(ArrowDropDown)
                            className="DownArrow DownArrowOverlay"
              />
</span>,
          ],
          "style": Object {
            "color": "#2196f3",
          },
        },
        "ref": null,
        "rendered": Array [
          undefined,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <pure(ArrowDropUp)
                  className="UpArrow"
/>,
                <pure(ArrowDropDown)
                  className="DownArrow DownArrowOverlay"
/>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "className": "UpArrow",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "className": "DownArrow DownArrowOverlay",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "span",
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`HeaderItem HeaderItem should render properly when column === itemKey 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <HeaderItem
    className=""
    column="name"
    id="name"
    itemKey="name"
    setSort={[Function]}
    style={Object {}}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <WithStyles(Button)
        style={
                Object {
                        "color": "#2196f3",
                      }
        }
>
        <pure(ArrowDropUp)
                className="UpArrow"
        />
</WithStyles(Button)>,
      "className": "",
      "item": true,
      "onClick": [Function],
      "sm": 6,
      "style": Object {},
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          undefined,
          <pure(ArrowDropUp)
            className="UpArrow"
/>,
        ],
        "style": Object {
          "color": "#2196f3",
        },
      },
      "ref": null,
      "rendered": Array [
        undefined,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "className": "UpArrow",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <WithStyles(Button)
          style={
                    Object {
                              "color": "#2196f3",
                            }
          }
>
          <pure(ArrowDropUp)
                    className="UpArrow"
          />
</WithStyles(Button)>,
        "className": "",
        "item": true,
        "onClick": [Function],
        "sm": 6,
        "style": Object {},
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            undefined,
            <pure(ArrowDropUp)
              className="UpArrow"
/>,
          ],
          "style": Object {
            "color": "#2196f3",
          },
        },
        "ref": null,
        "rendered": Array [
          undefined,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "className": "UpArrow",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`HeaderItem HeaderItem should render properly when column === itemKey and isAscending === true 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <HeaderItem
    className=""
    column="name"
    id="name"
    isAscending={true}
    itemKey="name"
    setSort={[Function]}
    style={Object {}}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <WithStyles(Button)
        style={
                Object {
                        "color": "#2196f3",
                      }
        }
>
        <pure(ArrowDropDown)
                className="DownArrow"
        />
</WithStyles(Button)>,
      "className": "",
      "item": true,
      "onClick": [Function],
      "sm": 6,
      "style": Object {},
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          undefined,
          <pure(ArrowDropDown)
            className="DownArrow"
/>,
        ],
        "style": Object {
          "color": "#2196f3",
        },
      },
      "ref": null,
      "rendered": Array [
        undefined,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "className": "DownArrow",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <WithStyles(Button)
          style={
                    Object {
                              "color": "#2196f3",
                            }
          }
>
          <pure(ArrowDropDown)
                    className="DownArrow"
          />
</WithStyles(Button)>,
        "className": "",
        "item": true,
        "onClick": [Function],
        "sm": 6,
        "style": Object {},
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            undefined,
            <pure(ArrowDropDown)
              className="DownArrow"
/>,
          ],
          "style": Object {
            "color": "#2196f3",
          },
        },
        "ref": null,
        "rendered": Array [
          undefined,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "className": "DownArrow",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
